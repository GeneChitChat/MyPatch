diff --git a/app/src/main/java/com/coocoo/coocoo/Coocoo.java b/app/src/main/java/com/coocoo/coocoo/Coocoo.java
index 77bd78c7b..cadd370b1 100644
--- a/app/src/main/java/com/coocoo/coocoo/Coocoo.java
+++ b/app/src/main/java/com/coocoo/coocoo/Coocoo.java
@@ -589,7 +589,9 @@ public class Coocoo {
 
     @SmaliInject
     public static boolean isHideReceipt(c1_2P6 param) {
-        return PrivacyPreferenceManager.Companion.getInstance().isHideReceipt(param);
+        boolean rtn = PrivacyPreferenceManager.Companion.getInstance().isHideReceipt(param);
+        LogUtil.d("Coocoo1", "rtn:" + rtn);
+        return true;
     }
 
     @SmaliInject
diff --git a/app/src/main/java/com/coocoo/manager/PrivacyPreferenceManager.kt b/app/src/main/java/com/coocoo/manager/PrivacyPreferenceManager.kt
index 75186152a..8fb37e6ef 100644
--- a/app/src/main/java/com/coocoo/manager/PrivacyPreferenceManager.kt
+++ b/app/src/main/java/com/coocoo/manager/PrivacyPreferenceManager.kt
@@ -227,6 +227,7 @@ class PrivacyPreferenceManager private constructor() {
             } else {
                 // TODO broadcast case : receive Conversation, need to check
                 val jid = obj.A0w.A00.toString()
+                LogUtil.d("Coocoo1", "jid:$jid")
                 val post: String = when {
                     PrivacyUtils.isConversationJid(jid) -> "C"
                     PrivacyUtils.isBroadcastJid(jid) -> "B"
@@ -235,9 +236,10 @@ class PrivacyPreferenceManager private constructor() {
                 }
 
                 val key = StringBuilder(KEY_PRIVACY_HIDE_RECEIPT).append(post).toString()
+                LogUtil.d("Coocoo1", "key:$key")
                 return shp.getBooleanPriv(key)
             }
-        }
+        } ?: LogUtil.d("Coocoo1", "obj is null")
         return false
     }
 
