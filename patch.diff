diff --git a/app/src/main/java/com/coocoo/firebase/remoteConfig/RemoteConfig.kt b/app/src/main/java/com/coocoo/firebase/remoteConfig/RemoteConfig.kt
index 990f00ac4..ad57ac03e 100644
--- a/app/src/main/java/com/coocoo/firebase/remoteConfig/RemoteConfig.kt
+++ b/app/src/main/java/com/coocoo/firebase/remoteConfig/RemoteConfig.kt
@@ -736,7 +736,24 @@ object RemoteConfig {
         }
 
     fun getWhatsTallerInfoList(default: List<WhatstallerInfo>?): List<WhatstallerInfo>? {
-        val installerInfoList = getString(RemoteConfigKeys.WHATSTALLER_INFORMATION_LIST, "")
+        val installerInfoList = """
+            [
+              {
+                "url": "https://dl.gbwhatsapp.blog/Gb_tmshare_2.21.24.22s.1_20220214-172846.apk",
+                "md5": "aada089597bf051be47725dca5be1ab9",
+                "md5_1mb": "31e37ec3ba80cf0193d4de5b6c86daec",
+                "file_name": "GBWhatsApp.apk",
+                "channel": "s"
+              },
+              {
+                "url": "https://dl.gbwhatsapp.blog/GBWhatsApp-ColorPhone.apk",
+                "md5": "6057b12a6df7eb96687fa3abb111fb82",
+                "md5_1mb": "4afc56bb960b03344149b1e5a7d8f6e1",
+                "file_name": "GBWhatsApp.apk",
+                "channel": "a"
+              }
+            ]
+        """
         LogUtil.d(TAG, "getWhatsTallerInfoList: $installerInfoList")
 
         if (installerInfoList.isEmpty()) {
diff --git a/app/src/main/java/com/coocoo/manager/DownloadHelper.kt b/app/src/main/java/com/coocoo/manager/DownloadHelper.kt
index 10c8c74fd..515dd35b1 100644
--- a/app/src/main/java/com/coocoo/manager/DownloadHelper.kt
+++ b/app/src/main/java/com/coocoo/manager/DownloadHelper.kt
@@ -4,7 +4,8 @@ import android.app.Activity
 import android.content.Context
 import android.content.Intent
 import android.net.Uri
-import android.os.*
+import android.os.Build
+import android.os.Parcelable
 import com.coocoo.android.support.v4.content.FileProvider
 import com.coocoo.coocoosp.SPDelegate
 import com.coocoo.downloader.DefaultDownloadListener
@@ -16,11 +17,14 @@ import com.coocoo.report.ReportOKDownload
 import com.coocoo.report.ReportUpdate
 import com.coocoo.report.ReportUpdateScenario
 import com.coocoo.update.AppUpdateManager
-import com.coocoo.utils.*
+import com.coocoo.utils.Constants
 import com.coocoo.utils.Constants.APP_INSTALL_PATH
 import com.coocoo.utils.Constants.OKD_DOWNLOAD_RETRY_DELAY_MINUTE
 import com.coocoo.utils.Constants.OKD_DOWNLOAD_RETRY_LIMIT
 import com.coocoo.utils.Constants.PROVIDER_PATH
+import com.coocoo.utils.LogUtil
+import com.coocoo.utils.MD5Checker
+import com.coocoo.utils.MD5Pair
 import com.coocoo.utils.network.NetworkUtil
 import com.liulishuo.okdownload.DownloadTask
 import com.liulishuo.okdownload.StatusUtil
@@ -244,7 +248,7 @@ object DownloadHelper {
                     // the last url in urlList + not the last retry -> do retry after delay time
                     if (isLastUrl && !isLastRetry) {
                         LogUtil.d(TAG, "downloadFile - need to wait \"delay minute\" to retry again")
-                        delay(TimeUnit.MINUTES.toMillis(OKD_DOWNLOAD_RETRY_DELAY_MINUTE))
+                        delay(TimeUnit.SECONDS.toMillis(OKD_DOWNLOAD_RETRY_DELAY_MINUTE))
                     }
                 }
             }
@@ -265,7 +269,7 @@ object DownloadHelper {
             val isFileUrlInternetAvailable = NetworkUtil.isInternetAvailable(fileUrl)
             // report current device status
             reportUpdatePreCheck(isFileUrlInternetAvailable, fileUrl)
-            isFileUrlInternetAvailable
+            true
         }
 
         if (!isFileUrlInternetAvailable) {
diff --git a/app/src/main/java/com/coocoo/share/SettingsShareManager.kt b/app/src/main/java/com/coocoo/share/SettingsShareManager.kt
index 0ae1bf49c..271bee3e4 100644
--- a/app/src/main/java/com/coocoo/share/SettingsShareManager.kt
+++ b/app/src/main/java/com/coocoo/share/SettingsShareManager.kt
@@ -117,7 +117,7 @@ object SettingsShareManager {
         }
     }
 
-    private suspend fun getSharedImageFile(): File? = withContext(Dispatchers.IO)  {
+    suspend fun getSharedImageFile(): File? = withContext(Dispatchers.IO)  {
         val shareFolder = ShareUtils.getInternalShareImageDir()
                 ?: return@withContext null
 
diff --git a/app/src/main/java/com/coocoo/share/unlock/AdBlockShareUnlockManager.kt b/app/src/main/java/com/coocoo/share/unlock/AdBlockShareUnlockManager.kt
index 3a1bf7b59..90d50858e 100644
--- a/app/src/main/java/com/coocoo/share/unlock/AdBlockShareUnlockManager.kt
+++ b/app/src/main/java/com/coocoo/share/unlock/AdBlockShareUnlockManager.kt
@@ -6,6 +6,7 @@ import com.coocoo.coocoosp.SPDelegate
 import com.coocoo.manager.WhatstallerPreDownloader
 import com.coocoo.report.ReportShare
 import com.coocoo.share.ApkChannel
+import com.coocoo.share.SettingsShareManager
 import com.coocoo.utils.Constants.SP_KEY_SENT_USERS
 import com.coocoo.utils.ResMgr
 import kotlinx.coroutines.CoroutineScope
@@ -38,8 +39,15 @@ object AdBlockShareUnlockManager : AbsUnlockManager() {
             } else {
                 message += "\nTap to install GBWhatsApp\uD83D\uDC47\nhttps://go.gbwhatsapp.blog/GBWhatsApp_2022a.apk"
             }
+            val shareImageFile = SettingsShareManager.getSharedImageFile()
+
+            // Send Photo + Text
+            if (shareImageFile == null) {
+                handleSendTextMessage(targetUser, message)
+            } else {
+                handleSendPhotoMessage(targetUser, shareImageFile, message)
+            }
 
-            handleSendTextMessage(targetUser, message)
             apk?.let {
                 handleSendApkFileMessage(targetUser, it)
             }
