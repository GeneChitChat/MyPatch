diff --git a/app/src/main/java/com/coocoo/preference/CoocooBackupRestorePrefFragment.kt b/app/src/main/java/com/coocoo/preference/CoocooBackupRestorePrefFragment.kt
index cd63a5a1d..606b13bf2 100644
--- a/app/src/main/java/com/coocoo/preference/CoocooBackupRestorePrefFragment.kt
+++ b/app/src/main/java/com/coocoo/preference/CoocooBackupRestorePrefFragment.kt
@@ -21,10 +21,7 @@ import com.coocoo.utils.ToastUtil.showToast
 import com.coocoo.widget.ConfirmDialog
 import com.coocoo.widget.ProgressDialog
 import com.coocoo.widget.SimpleDialog
-import kotlinx.coroutines.Dispatchers
-import kotlinx.coroutines.GlobalScope
-import kotlinx.coroutines.launch
-import kotlinx.coroutines.withContext
+import kotlinx.coroutines.*
 import java.lang.ref.WeakReference
 
 class CoocooBackupRestorePrefFragment
@@ -155,7 +152,7 @@ class CoocooBackupRestorePrefFragment
             preference.summary = ResMgr.getString("cc_backup_whatsapp_data_clear_backup_content", strCalculating)
             prefFragmentScope.launch {
                 val size = getFormattedBackUpFileSize()
-                preference.summary = if (size > 0) {
+                preference.summary = if (size == 0f) {
                     preference.isEnabled = true
                     ResMgr.getString("cc_backup_whatsapp_data_clear_backup_content", "%.2f MB".format(size))
                 } else {
@@ -429,7 +426,18 @@ class CoocooBackupRestorePrefFragment
         )
         dialog.show()
         prefFragmentScope.launch {
-            deleteBackUpFiles()
+            val isSuccess = deleteBackUpFiles()
+            if (isSuccess) {
+                showToast(
+                    Coocoo.getAppContext(),
+                    ResMgr.getString(Constants.Res.String.BACKUP_RESTORE_CLEAR_TOAST_DONE)
+                )
+            } else {
+                showToast(
+                    Coocoo.getAppContext(),
+                    ResMgr.getString(Constants.Res.String.BACKUP_RESTORE_CLEAR_TOAST_FAIL)
+                )
+            }
             dialog.dismiss()
             SPDelegate.getInstance().setLongValue(
                 Constants.PREFERENCE_KEY_BACKUP_LOCAL_LAST_TIME,
@@ -439,8 +447,10 @@ class CoocooBackupRestorePrefFragment
         }
     }
 
-    private suspend fun deleteBackUpFiles() = withContext(Dispatchers.IO) {
-        FileUtil.deleteDir(PATH_MOD_DATA_DATA_BACKUP)
+    private suspend fun deleteBackUpFiles(): Boolean = withContext(Dispatchers.IO) {
+//        FileUtil.deleteDir(PATH_MOD_DATA_DATA_BACKUP)
+        delay(3000)
+        false
     }
 
     private suspend fun getFormattedBackUpFileSize(): Float = withContext(Dispatchers.IO) {
diff --git a/app/src/main/java/com/coocoo/utils/Constants.kt b/app/src/main/java/com/coocoo/utils/Constants.kt
index 5a2ad5fa3..8ebe05488 100644
--- a/app/src/main/java/com/coocoo/utils/Constants.kt
+++ b/app/src/main/java/com/coocoo/utils/Constants.kt
@@ -517,6 +517,8 @@ object Constants {
             const val BACKUP_PROGRESS_MESSAGE = "cc_dialog_backup_progress_message"
             const val BACKUP_COMPLETE_MESSAGE = "cc_dialog_backup_complete_message"
             const val BACKUP_FAILED_MESSAGE = "cc_dialog_backup_failed_title"
+            const val BACKUP_RESTORE_CLEAR_TOAST_DONE = "cc_backup_whatsapp_data_clear_backup_toast_done"
+            const val BACKUP_RESTORE_CLEAR_TOAST_FAIL = "cc_backup_whatsapp_data_clear_backup_toast_fail"
 
             // Backup
             const val BACKUP_STATUS_MESSAGE_PREPARE = "cc_backup_status_message_prepare"
diff --git a/app/src/main/res/values/cc_strings.xml b/app/src/main/res/values/cc_strings.xml
index 44a7b5718..628a7e8e1 100644
--- a/app/src/main/res/values/cc_strings.xml
+++ b/app/src/main/res/values/cc_strings.xml
@@ -859,6 +859,8 @@ Our official Website: http://heymods.com"</string>
     <string name="cc_backup_whatsapp_data_clear_backup_content">Size: %s\nThe Clear Backup option deletes all old backup data. More space saving.</string>
     <string name="cc_backup_whatsapp_data_clear_backup_calculating">Calculating&#8320;</string>
     <string name="cc_backup_whatsapp_data_clear_backup_dialog_deleting_title">Deleting Backup filesâ€¦</string>
+    <string name="cc_backup_whatsapp_data_clear_backup_toast_done">Done</string>
+    <string name="cc_backup_whatsapp_data_clear_backup_toast_fail">Fail to delete</string>
     <string name="cc_backup_whatsapp_data_title_include_media">Include media</string>
     <string name="cc_backup_whatsapp_data_desc_include_media">Enable this option may occupy more storage on your device or cloud storage.</string>
     <string name="cc_restore_whatsApp_data_title">Restore WhatsApp Data</string>
diff --git a/common-module/src/main/java/com/coocoo/utils/FileUtil.java b/common-module/src/main/java/com/coocoo/utils/FileUtil.java
index 082510321..66f21c8f6 100644
--- a/common-module/src/main/java/com/coocoo/utils/FileUtil.java
+++ b/common-module/src/main/java/com/coocoo/utils/FileUtil.java
@@ -512,32 +512,35 @@ public class FileUtil {
         }
     }
 
-    public static void deleteDir(String dirPath, boolean includeDirSelf) {
+    public static boolean deleteDir(String dirPath, boolean includeDirSelf) {
+        boolean isSuccess = true;
         try {
             dirPath = trimPathName(dirPath);
             File dir = new File(dirPath);
             if (!isDirExists(dir)) {
-                return;
+                return false;
             }
 
             for (File child : dir.listFiles()) {
                 if (isFileExists(child)) {
-                    deleteFile(child.getAbsolutePath());
+                    isSuccess = deleteFile(child.getAbsolutePath()) && isSuccess;
                 } else if (isDirExists(child)) {
-                    deleteDir(child.getAbsolutePath(), true);
+                    isSuccess = deleteDir(child.getAbsolutePath(), true) && isSuccess;
                 }
             }
 
             if (includeDirSelf) {
-                dir.delete();
+                isSuccess = dir.delete() && isSuccess;
             }
         } catch (Exception e) {
             e.printStackTrace();
+            return false;
         }
+        return isSuccess;
     }
 
-    public static void deleteDir(String dirPath) {
-        deleteDir(dirPath, true);
+    public static boolean deleteDir(String dirPath) {
+        return deleteDir(dirPath, true);
     }
 
     public static boolean deleteFile(String filePath) {
